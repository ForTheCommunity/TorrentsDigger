stages:
  - build
  - release

image: instrumentisto/flutter

build_binaries:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  script:
    # Install Rust
    - apt update -y && apt upgrade -y
    - apt install -y curl git wget unzip
    - curl https://sh.rustup.rs -sSf | sh -s -- -y
    - source "$HOME/.cargo/env"

    # Installing cargo-binstall
    - curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
    # install just
    - cargo binstall just

    # Creating essential dirs
    - mkdir -p  build_deps_dir releases

    # Get app name and version
    - export APP_NAME=$(grep 'name:' pubspec.yaml | head -1 | awk '{print $2}' | sed 's/-/_/g' | sed 's/\r//g')
    - export APP_VERSION=$(grep 'version:' pubspec.yaml | head -1 | awk '{print $2}' | sed 's/+//' | sed 's/ /_/g' | sed 's/\r//g')

    # Setting Apk Name according to cpu architectures
    - export UNIVERSAL_APK_NAME="${APP_NAME}_${APP_VERSION}_universal.apk"
    - export ARMEABI_V7A_APK_NAME="${APP_NAME}_${APP_VERSION}_armeabi-v7a.apk"
    - export ARM64_V8A_APK_NAME="${APP_NAME}_${APP_VERSION}_arm64-v8a.apk"
    - export X86_64_APK_NAME="${APP_NAME}_${APP_VERSION}_x86_64.apk"

    # Creating releases dir
    - mkdir -p releases
    - flutter pub get
    - dart run build_runner build # [Freezed]

    - just build_apk
    - just build_apk_per_abi

    # Save .env for release job
    - echo "UNIVERSAL_APK_NAME=$UNIVERSAL_APK_NAME" > build.env
    - echo "ARMEABI_V7A_APK_NAME=$ARMEABI_V7A_APK_NAME" >> build.env
    - echo "ARM64_V8A_APK_NAME=$ARM64_V8A_APK_NAME" >> build.env
    - echo "X86_64_APK_NAME=$X86_64_APK_NAME" >> build.env

    # Creating AppImage
    # Grepping App Name & Version.
    - export APPIMAGE_VERSION=$(grep 'version:' pubspec.yaml | head -1 | awk '{print $2}' | cut -c1-3);
    - export NEW_APPIMAGE_NAME="${APP_NAME}_${APP_VERSION}-x86_64_linux.AppImage"

    # Build AppImage
    - just build_appimage

    # Save .env for release job
    - echo "NEW_APPIMAGE_NAME=$NEW_APPIMAGE_NAME" >> build.env

  artifacts:
    paths:
      - releases
      - build.env # make sure dotenv is uploaded
    reports:
      dotenv: build.env

create-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: build_binaries
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Preparing release..."
    - . build.env # use dot instead of source for POSIX sh compatibility
  release:
    tag_name: "$CI_COMMIT_TAG"
    name: "Release $CI_COMMIT_TAG"
    description: "Automated GitLab CI/CD release for version $CI_COMMIT_TAG"
    assets:
      links:
        # Android Universal Fat Apk
        - name: "$UNIVERSAL_APK_NAME"
          url: "https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/releases/$UNIVERSAL_APK_NAME?job=build_binaries"
        - name: "$UNIVERSAL_APK_NAME.sha256.txt"
          url: "https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/releases/$UNIVERSAL_APK_NAME.sha256.txt?job=build_binaries"
        # Android armeabi-v7a-release
        - name: "$ARMEABI_V7A_APK_NAME"
          url: "https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/releases/$ARMEABI_V7A_APK_NAME?job=build_binaries"
        - name: "$ARMEABI_V7A_APK_NAME.sha256.txt"
          url: "https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/releases/$ARMEABI_V7A_APK_NAME.sha256.txt?job=build_binaries"
        # Android arm64-v8a-release
        - name: "$ARM64_V8A_APK_NAME"
          url: "https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/releases/$ARM64_V8A_APK_NAME?job=build_binaries"
        - name: "$ARM64_V8A_APK_NAME.sha256.txt"
          url: "https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/releases/$ARM64_V8A_APK_NAME.sha256.txt?job=build_binaries"
        # Android x86_64-release
        - name: "$X86_64_APK_NAME"
          url: "https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/releases/$X86_64_APK_NAME?job=build_binaries"
        - name: "$X86_64_APK_NAME.sha256.txt"
          url: "https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/releases/$X86_64_APK_NAME.sha256.txt?job=build_binaries"
        # AppImage
        - name: "$NEW_APPIMAGE_NAME"
          url: "https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/releases/$NEW_APPIMAGE_NAME?job=build_binaries"
        - name: "$NEW_APPIMAGE_NAME.sha256.txt"
          url: "https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/releases/$NEW_APPIMAGE_NAME.sha256.txt?job=build_binaries"
