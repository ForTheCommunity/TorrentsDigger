// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'api/app.dart';
import 'api/database/get_settings_kv.dart';
import 'api/database/initialize.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  Map<String, String> dco_decode_Map_String_String_None(dynamic raw);

  @protected
  Map<String, InternalSourceDetails>
  dco_decode_Map_String_internal_source_details_None(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw);

  @protected
  InternalQueryOptions dco_decode_internal_query_options(dynamic raw);

  @protected
  InternalSourceDetails dco_decode_internal_source_details(dynamic raw);

  @protected
  InternalTorrent dco_decode_internal_torrent(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<InternalTorrent> dco_decode_list_internal_torrent(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, InternalSourceDetails)>
  dco_decode_list_record_string_internal_source_details(dynamic raw);

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  (String, InternalSourceDetails)
  dco_decode_record_string_internal_source_details(dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  Map<String, String> sse_decode_Map_String_String_None(
    SseDeserializer deserializer,
  );

  @protected
  Map<String, InternalSourceDetails>
  sse_decode_Map_String_internal_source_details_None(
    SseDeserializer deserializer,
  );

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer);

  @protected
  InternalQueryOptions sse_decode_internal_query_options(
    SseDeserializer deserializer,
  );

  @protected
  InternalSourceDetails sse_decode_internal_source_details(
    SseDeserializer deserializer,
  );

  @protected
  InternalTorrent sse_decode_internal_torrent(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<InternalTorrent> sse_decode_list_internal_torrent(
    SseDeserializer deserializer,
  );

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, InternalSourceDetails)>
  sse_decode_list_record_string_internal_source_details(
    SseDeserializer deserializer,
  );

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
    SseDeserializer deserializer,
  );

  @protected
  (String, InternalSourceDetails)
  sse_decode_record_string_internal_source_details(
    SseDeserializer deserializer,
  );

  @protected
  (String, String) sse_decode_record_string_string(
    SseDeserializer deserializer,
  );

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  void sse_encode_Map_String_String_None(
    Map<String, String> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_Map_String_internal_source_details_None(
    Map<String, InternalSourceDetails> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer);

  @protected
  void sse_encode_internal_query_options(
    InternalQueryOptions self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_internal_source_details(
    InternalSourceDetails self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_internal_torrent(
    InternalTorrent self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_internal_torrent(
    List<InternalTorrent> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_prim_u_8_strict(
    Uint8List self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_record_string_internal_source_details(
    List<(String, InternalSourceDetails)> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_record_string_string(
    List<(String, String)> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_record_string_internal_source_details(
    (String, InternalSourceDetails) self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_record_string_string(
    (String, String) self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
extension type RustLibWasmModule._(JSObject _) implements JSObject {}
