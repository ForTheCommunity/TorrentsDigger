// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class InternalIpDetails {
  final String ipAddr;
  final String isp;
  final String continent;
  final String country;
  final String capital;
  final String city;
  final String region;
  final double latitude;
  final double longitude;
  final String timezone;
  final String flagUnicode;
  final bool isVpn;
  final bool isTor;

  const InternalIpDetails({
    required this.ipAddr,
    required this.isp,
    required this.continent,
    required this.country,
    required this.capital,
    required this.city,
    required this.region,
    required this.latitude,
    required this.longitude,
    required this.timezone,
    required this.flagUnicode,
    required this.isVpn,
    required this.isTor,
  });

  @override
  int get hashCode =>
      ipAddr.hashCode ^
      isp.hashCode ^
      continent.hashCode ^
      country.hashCode ^
      capital.hashCode ^
      city.hashCode ^
      region.hashCode ^
      latitude.hashCode ^
      longitude.hashCode ^
      timezone.hashCode ^
      flagUnicode.hashCode ^
      isVpn.hashCode ^
      isTor.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is InternalIpDetails &&
          runtimeType == other.runtimeType &&
          ipAddr == other.ipAddr &&
          isp == other.isp &&
          continent == other.continent &&
          country == other.country &&
          capital == other.capital &&
          city == other.city &&
          region == other.region &&
          latitude == other.latitude &&
          longitude == other.longitude &&
          timezone == other.timezone &&
          flagUnicode == other.flagUnicode &&
          isVpn == other.isVpn &&
          isTor == other.isTor;
}

class InternalProxy {
  final int id;
  final String proxyName;
  final String proxyType;
  final String proxyServerIp;
  final String proxyServerPort;
  final String? proxyUsername;
  final String? proxyPassword;

  const InternalProxy({
    required this.id,
    required this.proxyName,
    required this.proxyType,
    required this.proxyServerIp,
    required this.proxyServerPort,
    this.proxyUsername,
    this.proxyPassword,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      proxyName.hashCode ^
      proxyType.hashCode ^
      proxyServerIp.hashCode ^
      proxyServerPort.hashCode ^
      proxyUsername.hashCode ^
      proxyPassword.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is InternalProxy &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          proxyName == other.proxyName &&
          proxyType == other.proxyType &&
          proxyServerIp == other.proxyServerIp &&
          proxyServerPort == other.proxyServerPort &&
          proxyUsername == other.proxyUsername &&
          proxyPassword == other.proxyPassword;
}

class InternalQueryOptions {
  final bool categories;
  final bool sortings;
  final bool filters;
  final bool pagination;

  const InternalQueryOptions({
    required this.categories,
    required this.sortings,
    required this.filters,
    required this.pagination,
  });

  @override
  int get hashCode =>
      categories.hashCode ^
      sortings.hashCode ^
      filters.hashCode ^
      pagination.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is InternalQueryOptions &&
          runtimeType == other.runtimeType &&
          categories == other.categories &&
          sortings == other.sortings &&
          filters == other.filters &&
          pagination == other.pagination;
}

class InternalSourceDetails {
  final InternalQueryOptions queryOptions;
  final List<String> categories;
  final List<String> sourceFilters;
  final List<String> sourceSortings;

  const InternalSourceDetails({
    required this.queryOptions,
    required this.categories,
    required this.sourceFilters,
    required this.sourceSortings,
  });

  @override
  int get hashCode =>
      queryOptions.hashCode ^
      categories.hashCode ^
      sourceFilters.hashCode ^
      sourceSortings.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is InternalSourceDetails &&
          runtimeType == other.runtimeType &&
          queryOptions == other.queryOptions &&
          categories == other.categories &&
          sourceFilters == other.sourceFilters &&
          sourceSortings == other.sourceSortings;
}

class InternalTorrent {
  final String infoHash;
  final String name;
  final String magnet;
  final String size;
  final String date;
  final String seeders;
  final String leechers;
  final String totalDownloads;

  const InternalTorrent({
    required this.infoHash,
    required this.name,
    required this.magnet,
    required this.size,
    required this.date,
    required this.seeders,
    required this.leechers,
    required this.totalDownloads,
  });

  @override
  int get hashCode =>
      infoHash.hashCode ^
      name.hashCode ^
      magnet.hashCode ^
      size.hashCode ^
      date.hashCode ^
      seeders.hashCode ^
      leechers.hashCode ^
      totalDownloads.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is InternalTorrent &&
          runtimeType == other.runtimeType &&
          infoHash == other.infoHash &&
          name == other.name &&
          magnet == other.magnet &&
          size == other.size &&
          date == other.date &&
          seeders == other.seeders &&
          leechers == other.leechers &&
          totalDownloads == other.totalDownloads;
}
